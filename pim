#!/usr/bin/env python
#+
# by Hong Chen
# Email: me@hongchen.cz
#-

import os
import sys
import datetime
import glob

# change your prefered terminal editor here
editor        = 'vim'
# add more file extensions here
extensionList = ['py', 'f', 'f90', 'ncl', 'pro']
# change the name for the backup directory here
backupDir     = '.backup'
# maximum number of backup files
NmaxFile      = 9999

Narg = len(sys.argv)

# only one argument presents, e.g., pim
if Narg == 1:
    os.system('%s' % editor)

# two arguments present, e.g., pim hello.py
elif Narg == 2:
    fullFileName  = sys.argv[1]
    words = fullFileName.split('.')

    # file with no extension, e.g., pim hello
    if len(words) == 1:
        os.system('%s %s' % (editor, fullFileName))

    # file has an extension, e.g. pim hello.v1.py
    elif len(words) >= 2:
        extension = words[-1]

        # file does not exist
        if not os.path.isfile(fullFileName):
            os.system('%s %s' % (editor, fullFileName))

        # file already exists
        else:
            fileSize  = os.path.getsize(fullFileName)
            NletterF  = len(fullFileName)-len(extension)-1
            fileName  = fullFileName[:NletterF]
            dateToday = str(datetime.date.today())
            NletterD  = len(dateToday)
            Nzeros    = len(str(NmaxFile))

            # file extension is not in the pre-defined extension list or file size is greater than ~2MB
            if extension not in extensionList or fileSize >= 2.0e6:
                os.system('%s %s' % (editor, fullFileName))

            # file has extension in the pre-defined extension list and file size is smaller than ~2MB
            else:

                # .backup directory does not exist
                if not os.path.isdir(backupDir):
                    os.system('mkdir %s' % backupDir)
                    fullFileName_new = '%s_%s_%s.%s' % (fileName, dateToday, str(1).zfill(Nzeros), extension)
                    os.system('cp %s %s/%s' % (fullFileName, backupDir, fullFileName_new))
                    os.system('%s %s' % (editor, fullFileName))

                # .backup directory already exists
                else:
                    fullFileNames = sorted(glob.glob('%s/%s*' % (backupDir, fileName)))
                    nFile         = len(fullFileNames)

                    # no backup file exists under the .backup directory
                    if nFile == 0:
                        fullFileName_new = '%s_%s_%s.%s' % (fileName, dateToday, str(1).zfill(Nzeros), extension)
                        os.system('cp %s %s/%s' % (fullFileName, backupDir, fullFileName_new))
                        os.system('%s %s' % (editor, fullFileName))

                    # has backup files under the .backup directory
                    else:
                        fullFileName_latest = fullFileNames[-1].split('/')[-1]
                        NletterF_latest    = len(fullFileName_latest)-len(extension)-1
                        fileName_latest     = fullFileName_latest[:NletterF_latest]
                        date_s  = fileName_latest[NletterF+1:NletterF+NletterD+1]
                        count_s = fileName_latest[NletterF+NletterD+2:]
                        count   = int(count)

                        # backup files are created on today
                        if date_s == dateToday:
                            count_new = count +1
                            if count_new > NmaxFile:
                                # need to be modified
                                count_del = count-NmaxFile
                                fullFileName_del = '%s_%s_%s.%s' % (fileName, dateToday, str(count_del).zfill(Nzeros), extension)
                                os.system('rm -rf %s/%s' % (backupDir, fullFileName_del))

                        # backup files are created on a different day
                        else:
                            count_new = 1

                        fullFileName_new = '%s_%s_%s.%s' % (fileName, dateToday, str(count_new).zfill(Nzeros), extension)
                        os.system('cp %s %s/%s' % (fullFileName, backupDir, fullFileName_new))
                        os.system('%s %s' % (editor, fullFileName))
